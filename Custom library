-- ReplicatedStorage.UI_Library
local UILibrary = {}

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local function create(class, props)
	local inst = Instance.new(class)
	for k, v in pairs(props) do
		inst[k] = v
	end
	return inst
end

function UILibrary:CreateWindow(title)
	local screenGui = create("ScreenGui", {
		Name = "UILib",
		ResetOnSpawn = false,
		Parent = PlayerGui
	})

	local main = create("Frame", {
		Name = "Main",
		Size = UDim2.new(0, 400, 0, 300),
		Position = UDim2.new(0.5, -200, 0.5, -150),
		BackgroundColor3 = Color3.fromRGB(30, 30, 30),
		Parent = screenGui
	})

	local tabButtons = create("Frame", {
		Name = "TabButtons",
		Size = UDim2.new(1, 0, 0, 40),
		BackgroundColor3 = Color3.fromRGB(45, 45, 45),
		Parent = main
	})

	local tabPages = create("Frame", {
		Name = "TabPages",
		Size = UDim2.new(1, 0, 1, -40),
		Position = UDim2.new(0, 0, 0, 40),
		BackgroundTransparency = 1,
		Parent = main
	})

	local uiList = Instance.new("UIListLayout", tabButtons)
	uiList.FillDirection = Enum.FillDirection.Horizontal
	uiList.SortOrder = Enum.SortOrder.LayoutOrder

	local window = {
		Main = main,
		TabButtons = tabButtons,
		TabPages = tabPages,
		Tabs = {}
	}

	function window:CreateTab(tabName)
		local tabButton = create("TextButton", {
			Text = tabName,
			Size = UDim2.new(0, 100, 1, 0),
			BackgroundColor3 = Color3.fromRGB(60, 60, 60),
			TextColor3 = Color3.new(1, 1, 1),
			Font = Enum.Font.Gotham,
			TextSize = 14,
			Parent = tabButtons
		})

		local tabPage = create("ScrollingFrame", {
			Name = tabName,
			Size = UDim2.new(1, 0, 1, 0),
			CanvasSize = UDim2.new(0, 0, 10, 0),
			ScrollBarThickness = 4,
			Visible = false,
			Parent = tabPages
		})
		Instance.new("UIListLayout", tabPage)

		tabButton.MouseButton1Click:Connect(function()
			for _, page in pairs(tabPages:GetChildren()) do
				if page:IsA("ScrollingFrame") then page.Visible = false end
			end
			tabPage.Visible = true
		end)

		window.Tabs[tabName] = tabPage
		return tabPage
	end

	return window
end

function UILibrary:AddSection(parent, title)
	local label = create("TextLabel", {
		Text = title,
		Size = UDim2.new(1, -10, 0, 30),
		BackgroundTransparency = 1,
		TextColor3 = Color3.new(1, 1, 1),
		TextXAlignment = Enum.TextXAlignment.Left,
		Font = Enum.Font.GothamBold,
		TextSize = 16,
		Parent = parent
	})
end

function UILibrary:AddButton(parent, text, callback)
	local button = create("TextButton", {
		Text = text,
		Size = UDim2.new(1, -10, 0, 30),
		BackgroundColor3 = Color3.fromRGB(70, 130, 180),
		TextColor3 = Color3.new(1, 1, 1),
		Font = Enum.Font.Gotham,
		TextSize = 14,
		Parent = parent
	})
	button.MouseButton1Click:Connect(callback)
end

function UILibrary:AddToggle(parent, text, default, callback)
	local state = default or false
	local button = create("TextButton", {
		Text = text .. ": " .. tostring(state),
		Size = UDim2.new(1, -10, 0, 30),
		BackgroundColor3 = Color3.fromRGB(90, 90, 90),
		TextColor3 = Color3.new(1, 1, 1),
		Font = Enum.Font.Gotham,
		TextSize = 14,
		Parent = parent
	})
	button.MouseButton1Click:Connect(function()
		state = not state
		button.Text = text .. ": " .. tostring(state)
		if callback then callback(state) end
	end)
end

function UILibrary:AddDropdown(parent, text, options, callback)
	local open = false
	local selected = text

	local main = create("TextButton", {
		Text = text,
		Size = UDim2.new(1, -10, 0, 30),
		BackgroundColor3 = Color3.fromRGB(100, 100, 100),
		TextColor3 = Color3.new(1, 1, 1),
		Font = Enum.Font.Gotham,
		TextSize = 14,
		Parent = parent
	})

	local container = create("Frame", {
		Size = UDim2.new(1, -10, 0, #options * 30),
		BackgroundTransparency = 1,
		Visible = false,
		Parent = parent
	})
	local layout = Instance.new("UIListLayout", container)

	for _, opt in ipairs(options) do
		local optBtn = create("TextButton", {
			Text = opt,
			Size = UDim2.new(1, 0, 0, 30),
			BackgroundColor3 = Color3.fromRGB(70, 70, 70),
			TextColor3 = Color3.new(1, 1, 1),
			Font = Enum.Font.Gotham,
			TextSize = 14,
			Parent = container
		})
		optBtn.MouseButton1Click:Connect(function()
			main.Text = opt
			container.Visible = false
			open = false
			callback(opt)
		end)
	end

	main.MouseButton1Click:Connect(function()
		open = not open
		container.Visible = open
	end)
end

return UILibrary
